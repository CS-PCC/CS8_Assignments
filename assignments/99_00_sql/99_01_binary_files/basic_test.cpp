#include "gtest/gtest.h"
#include <iostream>
#include <iomanip>
#include <cmath>
#include <set>
#include <vector>
#include <string>
#include <fstream>

//------------------------------------------------------------------------------
//Files we are testing:
#include "../../includes/binary_files/file_record.h"
#include "../../includes/binary_files/utilities.h"


//------------------------------------------------------------------------------

using namespace std;

//------------------------------------------------------------------------------
//          COPY BASIC_TEST INTO THIS FILE.
//                    AND THEN,
//         DO NOT EDIT THIS FILE ANY FURTHER
//------------------------------------------------------------------------------

bool test_binary_files(bool debug=false)
{
  // Open the file
  fstream f;
  // Reset the file: use this for new files
  open_fileW(f, "record_list.bin");
  // Initialize the FileRecord
  FileRecord r;
  // recno is the record number
  int recno = -1;
  // Fill the FileRecord with a string
  vector<string> v;

  cout << "Writing to file: record_list.bin" << endl;
  cout << "--------------------------------" << endl;

  // Initialize the vector of strings
  v = vector<string>({"Joe Zero", "000"});
  // Fill the FileRecord with a vector of strings
  r = FileRecord(v);
  // Write the FileRecord to the file return the record number
  recno = r.write(f);
  // Print the record number
  cout << "Wrote into record: " << recno << endl;

  v = vector<string>({"One Arm Jane", "111"});
  r = FileRecord(v);
  recno = r.write(f);
  cout << "Wrote into record: " << recno << endl;

  v = vector<string>({"Two face Harvey", "222"});
  r = FileRecord(v);
  recno = r.write(f);
  cout << "Wrote into record: " << recno << endl;

  v = vector<string>({"Three Eyed Raven", "333"});
  r = FileRecord(v);
  recno = r.write(f);
  cout << "Wrote into record: " << recno << endl;

  v = vector<string>({"Four Square Circle", "444"});
  r = FileRecord(v);
  recno = r.write(f);
  cout << "Wrote into record: " << recno << endl;

  v = vector<string>({"Cinco De Mayo, Bryan!", "555"});
  r = FileRecord(v);
  recno = r.write(f);
  cout << "Wrote into record: " << recno << endl;

  v = vector<string>({"The Six Shooter Kid!", "666"});
  r = FileRecord(v);
  recno = r.write(f);
  cout << "Wrote into record: " << recno << endl;

  // Close the file
  f.close();

  cout << endl;
  cout << "Reading from file: record_list.bin" << endl;
  cout << "----------------------------------" << endl;

  // Open the file for reading and writing
  open_fileRW(f, "record_list.bin" );
  // Initialize the number of records
  int i = 0;
  // Read the first record
  long bytes = r.read(f, i);
  while (bytes > 0) {
    // Print the record
    cout << "Record " << i << ": " << r << endl;
    // Increment the record number
    i++;
    // Read the record
    bytes = r.read(f, i);
  }

  // Reading passed the end of file:
  bytes = r.read(f, 19);
  cout << "Number of bytes read: " << bytes << endl;

  // Close the file
  f.close();

  return true;
}


//Lord help me! 
const bool debug = false;

TEST(BASIC_TEST, BinaryFiles)
{
  EXPECT_TRUE(test_binary_files(debug));
}


int main(int argc, char **argv)
{
  ::testing::InitGoogleTest(&argc, argv);
  std::cout<<"\n\n----------running basic_test.cpp---------\n\n"<<std::endl;
  return RUN_ALL_TESTS();
}


/*
includes
└── binary_files
    ├── file_record.cpp
    ├── file_record.h
    ├── utilities.cpp
    └── utilities.h

1 directory, 4 files


----------running basic_test.cpp---------


[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from BASIC_TEST
[ RUN      ] BASIC_TEST.BinaryFiles
Writing to file: record_list.bin
--------------------------------
Wrote into record: 0
Wrote into record: 1
Wrote into record: 2
Wrote into record: 3
Wrote into record: 4
Wrote into record: 5
Wrote into record: 6

Reading from file: record_list.bin
----------------------------------
Record 0:                  Joe Zero                      000
Record 1:              One Arm Jane                      111
Record 2:           Two face Harvey                      222
Record 3:          Three Eyed Raven                      333
Record 4:        Four Square Circle                      444
Record 5:     Cinco De Mayo, Bryan!                      555
Record 6:      The Six Shooter Kid!                      666
Number of bytes read: 0
[       OK ] BASIC_TEST.BinaryFiles (2 ms)
[----------] 1 test from BASIC_TEST (2 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (2 ms total)
[  PASSED  ] 1 test.
*/